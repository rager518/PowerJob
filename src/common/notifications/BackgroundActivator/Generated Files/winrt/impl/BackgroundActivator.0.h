// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.240111.5

#pragma once
#ifndef WINRT_BackgroundActivator_0_H
#define WINRT_BackgroundActivator_0_H
WINRT_EXPORT namespace winrt::Windows::ApplicationModel::Background
{
    struct IBackgroundTaskInstance;
}
WINRT_EXPORT namespace winrt::BackgroundActivator
{
    struct IBackgroundHandler;
    struct BackgroundHandler;
}
namespace winrt::impl
{
    template <> struct category<winrt::BackgroundActivator::IBackgroundHandler>{ using type = interface_category; };
    template <> struct category<winrt::BackgroundActivator::BackgroundHandler>{ using type = class_category; };
    template <> inline constexpr auto& name_v<winrt::BackgroundActivator::BackgroundHandler> = L"BackgroundActivator.BackgroundHandler";
    template <> inline constexpr auto& name_v<winrt::BackgroundActivator::IBackgroundHandler> = L"BackgroundActivator.IBackgroundHandler";
    template <> inline constexpr guid guid_v<winrt::BackgroundActivator::IBackgroundHandler>{ 0x1BB16207,0x2CD4,0x5F18,{ 0xAB,0xEE,0x13,0xB9,0x68,0x19,0x26,0xD6 } }; // 1BB16207-2CD4-5F18-ABEE-13B9681926D6
    template <> struct default_interface<winrt::BackgroundActivator::BackgroundHandler>{ using type = winrt::BackgroundActivator::IBackgroundHandler; };
    template <> struct abi<winrt::BackgroundActivator::IBackgroundHandler>
    {
        struct WINRT_IMPL_NOVTABLE type : inspectable_abi
        {
            virtual int32_t __stdcall Run(void*) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_BackgroundActivator_IBackgroundHandler
    {
        auto Run(winrt::Windows::ApplicationModel::Background::IBackgroundTaskInstance const& taskInstance) const;
    };
    template <> struct consume<winrt::BackgroundActivator::IBackgroundHandler>
    {
        template <typename D> using type = consume_BackgroundActivator_IBackgroundHandler<D>;
    };
}
#endif
